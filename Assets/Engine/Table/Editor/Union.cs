//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: Union.proto
namespace ProtoTable
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"EveryValue")]
  public partial class EveryValue : global::ProtoBuf.IExtensible,global::ProtoBuf.IParseable
  {
    public EveryValue() {}
    
    private readonly global::System.Collections.Generic.List<int> _everyValues = new global::System.Collections.Generic.List<int>();
    [global::ProtoBuf.ProtoMember(1, Name=@"everyValues", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public global::System.Collections.Generic.List<int> everyValues
    {
      get { return _everyValues; }
    }
  
    public void Parse(ProtoBuf.ProtoReader source){
        int fieldNumber = 0;
        while ((fieldNumber = source.ReadFieldHeader()) > 0)
        {
            switch (fieldNumber)
            {
                default:
                    source.SkipField();
                    break;
            
    
            case 1:   //everyValues LABEL_REPEATED TYPE_INT32  TwosComplement
                    int everyValuesfield = source.FieldNumber;
                    do{
                        everyValues.Add(source.ReadInt32());
                    } while(source.TryReadFieldHeader(everyValuesfield));
                    break;
                    
            }
        }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"UnionCell")]
  public partial class UnionCell : global::ProtoBuf.IExtensible,global::ProtoBuf.IParseable
  {
    public UnionCell() {}
    
    private ProtoTable.UnionCellType _valueType;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"valueType", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public ProtoTable.UnionCellType valueType
    {
      get { return _valueType; }
      set { _valueType = value; }
    }
    private ProtoTable.EveryValue _eValues = null;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"eValues", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public ProtoTable.EveryValue eValues
    {
      get { return _eValues; }
      set { _eValues = value; }
    }
    private int _fixValue = default(int);
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"fixValue", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(default(int))]
    public int fixValue
    {
      get { return _fixValue; }
      set { _fixValue = value; }
    }
    private int _fixInitValue = default(int);
    [global::ProtoBuf.ProtoMember(4, IsRequired = false, Name=@"fixInitValue", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(default(int))]
    public int fixInitValue
    {
      get { return _fixInitValue; }
      set { _fixInitValue = value; }
    }
    private int _fixLevelGrow = default(int);
    [global::ProtoBuf.ProtoMember(5, IsRequired = false, Name=@"fixLevelGrow", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(default(int))]
    public int fixLevelGrow
    {
      get { return _fixLevelGrow; }
      set { _fixLevelGrow = value; }
    }
    public void Parse(ProtoBuf.ProtoReader source){
        int fieldNumber = 0;
        while ((fieldNumber = source.ReadFieldHeader()) > 0)
        {
            switch (fieldNumber)
            {
                default:
                    source.SkipField();
                    break;
            
    
            case 1:   //valueType LABEL_REQUIRED TYPE_ENUM .ProtoTable.UnionCellType TwosComplement
                    valueType = (ProtoTable.UnionCellType)source.ReadInt32();
                    break;
                    
            case 2:   //eValues LABEL_OPTIONAL TYPE_MESSAGE .ProtoTable.EveryValue TwosComplement
                    eValues = new ProtoTable.EveryValue();
                    ProtoBuf.SubItemToken eValuestoken = ProtoBuf.ProtoReader.StartSubItem(source); 
                    eValues.Parse(source);
                    ProtoBuf.ProtoReader.EndSubItem(eValuestoken, source);
                    break;
                    
            case 3:   //fixValue LABEL_OPTIONAL TYPE_INT32  TwosComplement
                    fixValue = source.ReadInt32();
                    break;
                    
            case 4:   //fixInitValue LABEL_OPTIONAL TYPE_INT32  TwosComplement
                    fixInitValue = source.ReadInt32();
                    break;
                    
            case 5:   //fixLevelGrow LABEL_OPTIONAL TYPE_INT32  TwosComplement
                    fixLevelGrow = source.ReadInt32();
                    break;
                    
            }
        }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
    [global::ProtoBuf.ProtoContract(Name=@"UnionCellType")]
    public enum UnionCellType
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"union_fix", Value=1)]
      union_fix = 1,
            
      [global::ProtoBuf.ProtoEnum(Name=@"union_fixGrow", Value=2)]
      union_fixGrow = 2,
            
      [global::ProtoBuf.ProtoEnum(Name=@"union_everyvalue", Value=3)]
      union_everyvalue = 3
    }
  
}